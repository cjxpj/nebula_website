const n=`# Nebula 语言使用指南 ✨\r
\r
## 🌟 介绍\r
\r
> 这是一个用于运行 Nebula 语言的平台  \r
> 拥有良好的语法功能  \r
> 帮助你更快更便捷开发网站等服务\r
\r
### 使用说明 📝\r
\`\`\`\r
启动后会生成NebulaData文件夹\r
请仔细阅读README.md文档进行使用\r
启动成功后就能访问127.0.0.1:8080进行查看\r
如果找不到md查看器，可以把md放进public访问进行查看。\r
\`\`\`\r
\r
## 📱 手机目录\r
Documents/NebulaData\r
\r
## 🔤 词库相关\r
\r
### wn词库 📑\r
\`\`\`\r
<h1>\r
<?n\r
%版本%\r
?>\r
</h1>\r
\`\`\`\r
\r
### n词库 📚\r
\`\`\`\r
头部\r
赋予值:内容\r
\r
Main\r
触发执行：%赋予值%\r
\`\`\`\r
\r
## 📂 初始文件\r
\r
### 程序内置文档位置 📄\r
NebulaData/README.md\r
\r
### 默认启动 🌐\r
**127.0.0.1:8080**\r
\r
### 程序系统重要文件 ⚙️\r
\r
#### 程序启动执行hua\r
NebulaData/system/start.n\r
\r
### 程序网页重要文件 🌐\r
\r
#### 随着系统跟随启动的目录文件\r
NebulaData/web/private/system/start.n\r
\r
#### 路由词库 🗺️\r
NebulaData/web/private/system/router.n\r
\r
## 👥 开发讨论\r
QQ群：927467925\r
\r
## 🔗 代码仓库\r
\r
### Github\r
\`\`\`\r
https://github.com/cjxpj/nebulaLanguage\r
\`\`\`\r
\r
<a href="https://github.com/cjxpj/nebulaLanguage/releases">下载</a>\r
\r
### Gitee\r
\`\`\`\r
https://gitee.com/cjxpj/nebulaLanguage\r
\`\`\`\r
\r
<a href="https://gitee.com/cjxpj/nebulaLanguage/releases">下载</a>\r
\r
## 🚀 Nebula 核心特性\r
\r
> 基于Golang语言开发  \r
> 专注WEB站点开发  \r
> 快速成型项目\r
\r
### 认识文件分类 🗂️\r
\r
| 名称 | 目录 |\r
| ---- | ---- |\r
| 储存目录 | database |\r
| 资源目录 | private |\r
| 词库目录 | public |\r
\r
\`\`\`\r
储存目录用于读写，资源目录用于存放重要资源跟词库，词库目录用于被访问执行公开的数据。\r
\`\`\`\r
\r
### 执行方式 ▶️\r
\r
> 词库支持头部在没有触发词情况下执行哦！\r
\r
\`\`\`\r
头部\r
\r
Main\r
尾巴\r
\`\`\`\r
\r
## 📦 数据结构相关\r
\r
### JSON框 📦\r
\`\`\`\r
JSON>赋予值={}\r
a=b\r
a->a=b\r
<JSON\r
\`\`\`\r
\r
\`\`\`\r
JSON>[]\r
0=a\r
1=b\r
<JSON\r
\`\`\`\r
\r
### 文本框 📝\r
> 帮助你更方便的多行文本\r
\r
\`\`\`\r
文本>赋予值=\\n\r
内\r
容\r
<文本\r
\`\`\`\r
\r
\`\`\`\r
文本>\\n\r
内\r
容\r
<文本\r
\`\`\`\r
\r
### 函数框 🔧\r
> 函数框可以帮助你在运行词库时候动态执行词库  \r
> 可以减少词库回调需求  \r
> 触发可以留空  \r
> 触发留空后就会直接运行  \r
> 函数框也支持获取参数跟括号\r
\r
\`\`\`\r
函数>赋予值=触发\r
a\r
<函数\r
$函数 赋予值 触发$\r
\`\`\`\r
\r
\`\`\`\r
函数>赋予值\r
a\r
<函数\r
$函数 赋予值$\r
\`\`\`\r
\r
#### 调用示例 📞\r
\`\`\`\r
函数>赋予值\r
$延迟 [1000*5]$\r
$打印 结束$\r
<函数\r
$打印 开始$\r
$异步函数 赋予值$\r
\`\`\`\r
\r
### 循环框 🔄\r
更方便的循环  \r
可以使用>终止  \r
也能修改当前循环次数**i:1**\r
\r
\`\`\`\r
循环>i=9\r
%i%\r
<循环\r
\`\`\`\r
\r
留空死循环\r
\`\`\`\r
循环>i\r
%i%\r
<循环\r
\`\`\`\r
\r
可以用在循环框中退出循环\r
\`\`\`\r
循环>i=5\r
%i%\r
如果:%i%>2\r
结束\r
>终止\r
<循环\r
\`\`\`\r
\r
循环中支持\r
\`\`\`\r
>跳过\r
>终止循环\r
>终止\r
\`\`\`\r
\r
### 遍历框 🔍\r
遍历JSON无法修改当前循环次数  \r
但是可以使用>终止\r
\r
\`\`\`\r
遍历>i,ii=["a","b"]\r
%i%=%ii%\r
<遍历\r
\`\`\`\r
\r
遍历中支持\r
\`\`\`\r
>跳过\r
>终止遍历\r
>终止\r
\`\`\`\r
\r
### 整合包 📦\r
这个相当于面对象功能，后续打算支持New到局部变量中。\r
\r
\`\`\`\r
整合包=>我的包\r
\r
[函数]设置变量 .*\r
$%自己 变量 %参数1%$\r
\r
[函数]读取变量\r
$%自己 变量$\r
\r
<=整合包\r
\r
Main\r
// 执行整合包函数\r
$.我的包 设置变量 成功$\r
$.我的包 读取变量$\r
// 整合包中获取变量\r
$%我的包 变量$\r
\`\`\`\r
\r
## 📝 编译与加密\r
\r
### 编译框 🔨\r
n文件可以用于词行换行\r
\`\`\`\r
Main\r
<?n\r
\r
a\r
\r
b\r
\r
c\r
?>\r
\`\`\`\r
\r
wn文件用于执行词库\r
\`\`\`\r
<h1>\r
<?n\r
%版本%\r
?>\r
</h1>\r
\`\`\`\r
\r
### 加密词库 🔒\r
返回true/false\r
\`\`\`\r
$加密词库 private/dic.n$\r
\`\`\`\r
生成出来的词库会在当前程序的encode文件夹中\r
\r
## 🔠 字符串操作\r
\r
### 大小写字母 🔡\r
\`\`\`\r
$大写字母 a$\r
$小写字母 A$\r
\`\`\`\r
\r
### 字符拼接 🔗\r
\`\`\`\r
$字符拼接 & ["url=","msg="]$\r
\`\`\`\r
\r
### 替换 🔄\r
| 需求 | 内容 | 替换| 成为 | 次数 |\r
| ---- | ---- | ---- | ---- | ---- |\r
| 替换 | 11234 | 1 | 2 | 1 |\r
\r
返回21234\r
次数留空为替换全部\r
\r
\`\`\`\r
$替换 替换内容 需要替换 替换后$\r
\`\`\`\r
\r
特殊用法\r
\`\`\`\r
函数>a\r
如果:%触发词%==2\r
停止\r
否则\r
%触发词%\r
<函数\r
$替换 AAA A %a%$\r
\`\`\`\r
\r
#### 正则替换 🧩\r
\`\`\`\r
$正则替换 文本 正则 替换后$\r
\`\`\`\r
\r
特殊用法\r
\`\`\`\r
函数>a=1\r
>%触发词%<\r
<函数\r
$正则替换 A1A123A \\d+ %a%$\r
\`\`\`\r
\r
### 截取 🔪\r
\`\`\`\r
$截取 abcd 1 2$\r
\`\`\`\r
\r
### 取中间 🎯\r
\`\`\`\r
$取中间 abcd a c$\r
\`\`\`\r
\r
### 字符定位 🔍\r
> 没有找到会返回-1\r
\r
\`\`\`\r
$查找字 内容 查找内容$\r
\`\`\`\r
\r
### 字符切片 🍕\r
\`\`\`\r
// 返回[]json\r
$字符切片 内容$\r
\`\`\`\r
\r
### 去除多余符号 ✂️\r
\`\`\`\r
$去除左右 文本 符号$\r
$去除左 文本 符号$\r
$去除右 文本 符号$\r
\`\`\`\r
\r
## 📂 文件操作\r
\r
### 读取数据 📖\r
用于读取文件全部文本\r
\`\`\`\r
$读文件 database/a.txt 默认值$\r
\`\`\`\r
\r
读是在一个文件储存多个数据的方法  \r
只会写入到database文件夹下\r
\`\`\`\r
$读 路径 键 默认值$\r
\`\`\`\r
\r
可以获取json列表\r
\`\`\`\r
$读 文件路径$\r
\`\`\`\r
\r
### 写入数据 ✍️\r
用于完全写入文本数据\r
\`\`\`\r
$写文件 database/a.txt 数据$\r
\`\`\`\r
\r
写是在一个文件储存多个数据的方法  \r
只会写入到database文件夹下\r
\`\`\`\r
$写 路径 键 数据$\r
\`\`\`\r
\r
### 文件大小 📏\r
\`\`\`\r
$文件大小 database/file.txt$\r
\`\`\`\r
\r
### 文件夹大小 📁\r
\`\`\`\r
$文件夹大小 database$\r
\`\`\`\r
\r
### 下载文件 📥\r
\r
\`\`\`\r
// 单线程\r
$下载文件 [url] [文件路径]$\r
// 多线程切片下载\r
$下载文件 [url] [文件路径] [线程|4~8] [下载进度打印终端|false]$\r
\`\`\`\r
\r
### 删除文件 🗑️\r
| 需求 | 目录 |\r
| ---- | ---- |\r
| 删除文件 | database |\r
\r
\`\`\`\r
$删除文件 database/a.txt$\r
\`\`\`\r
\r
### 删除文件夹 🗑️📁\r
\`\`\`\r
$删除文件夹 database/缓存$\r
\`\`\`\r
\r
### 存在文件判断 🔍📄\r
\`\`\`\r
$存在文件 database/a.txt$\r
\`\`\`\r
返回true或者false\r
\r
### 存在文件夹判断 🔍📁\r
\`\`\`\r
$存在文件夹 database$\r
\`\`\`\r
返回true或者false\r
\r
\r
### 存在文件或文件夹判断 🔍📄📁\r
\r
\`\`\`\r
$存在文件或文件夹 database$\r
\`\`\`\r
\r
### 文件列表 📋\r
文件夹留空为站点目录\r
\r
\`\`\`\r
$文件列表 database$\r
$文件夹列表 database$\r
$文件跟文件夹列表 database$\r
\`\`\`\r
\r
示例\r
\`\`\`\r
$文件夹列表$\r
\`\`\`\r
返回\r
\`\`\`\r
["database","private","public"]\r
\`\`\`\r
\r
### 重命名移动 🔄\r
返回true/false\r
成功返回true\r
\`\`\`\r
$重命名 database database2$\r
\`\`\`\r
\r
### 复制粘贴 📋\r
返回true/false\r
成功返回true\r
\`\`\`\r
$复制粘贴 database database2$\r
\`\`\`\r
\r
### ZIP操作 🗜️\r
\`\`\`\r
$ZIP压缩 database/文件夹 database/a.zip$\r
$ZIP解压 database/a.zip database/文件夹$\r
\`\`\`\r
\r
## 🔐 加密与编码\r
\r
### AES 🔒\r
key范围\r
16/24/32\r
\r
\`\`\`\r
$AES加密 CBC/CFB key 内容$\r
$AES解密 CBC/CFB key 内容$\r
\`\`\`\r
\r
### MD5编码 🔏\r
\`\`\`\r
$MD5编码 内容$\r
\`\`\`\r
\r
### Base64 🔑\r
\`\`\`\r
$B64编码 内容$\r
$B64解码 内容$\r
\`\`\`\r
\r
### URL编码/解码 🌐\r
> URL链接编码就是自动识别get参数自动编码  \r
> 不会影响到链接  \r
> URL编码是完全编码\r
\r
\`\`\`\r
$URL编码 内容$\r
$URL解码 内容$\r
$URL链接编码 url$\r
$URL链接解码 url$\r
\`\`\`\r
\r
### 编码解码 🔄\r
| 支持编码 |\r
| :--: |\r
| GBK |\r
| 二进制 |\r
| 十六进制 |\r
| HZGB2312 |\r
| GB18030 |\r
| ASCII |\r
| ISO-8859-1 |\r
\r
\`\`\`\r
$编码 二进制 你好$\r
$解码 二进制 111001001011110110100000111001011010010110111101$\r
\`\`\`\r
\r
### HTML编码/解码 🌐\r
\`\`\`\r
$HTML编码 内容$\r
$HTML解码 内容$\r
\`\`\`\r
\r
### 📌 Ed25519 密钥与签名函数文档\r
\r
#### **✅ 获取 Ed25519 的种子长度**\r
\`\`\`\r
$Ed25519种子大小$\r
\`\`\`\r
\r
#### **✅ 生成一对 Ed25519 公钥与私钥**\r
\`\`\`\r
// 返回 map[私钥/公钥] 数据\r
$Ed25519生成密钥$\r
k:@$Ed25519生成密钥$->公钥\r
\`\`\`\r
\r
#### **✅ 从指定种子生成一对 Ed25519 密钥**\r
\`\`\`\r
// 返回 map[私钥/公钥] 数据\r
$Ed25519从种子生成密钥 [密钥]$\r
k:@$Ed25519从种子生成密钥 %密钥%$->私钥\r
\`\`\`\r
\r
#### **✅ 使用私钥对消息进行签名**\r
\`\`\`\r
// 返回签名结果\r
$Ed25519签名 [私钥] [消息]$\r
\`\`\`\r
\r
#### **✅ 验证签名是否合法**\r
\`\`\`\r
// 返回 true 或 false\r
$Ed25519验证签名 [公钥] [消息] [签名]$\r
\`\`\`\r
\r
#### **✅ 公钥转换**\r
\`\`\`\r
// 返回 Curve25519 公钥\r
$Ed25519公钥转换为Curve25519 [公钥]$\r
\`\`\`\r
\r
#### **✅ 私钥转换**\r
\`\`\`\r
// 返回 Curve25519 私钥\r
$Ed25519私钥转换为Curve25519 [私钥]$\r
\`\`\`\r
\r
#### **✅ 从 Curve25519 私钥生成 Ed25519 密钥**\r
\`\`\`\r
// 返回 map[私钥/公钥] 数据\r
$Ed25519从Curve25519生成密钥 [Curve私钥]$\r
\`\`\`\r
\r
## 🧮 计算与逻辑\r
\r
### 计算 ➕➖✖️➗\r
> 谁天生是数学天才？  \r
> 支持运算符号\r
\`\`\`\r
加 +\r
减 -\r
乘 *\r
除 /\r
\`\`\`\r
\r
\`\`\`\r
[2*(1+1)]\r
\`\`\`\r
\r
\`\`\`\r
$计算 1 加 1$\r
$计算 1 + 1$\r
$计算 1 减 1$\r
$计算 1 - 1$\r
$计算 1 乘 1$\r
$计算 1 * 1$\r
$计算 1 除 1$\r
$计算 1 / 1$\r
$计算 1 除余 1$\r
$计算 1 % 1$\r
$计算 1 按位或 1$\r
$计算 1 | 1$\r
$计算 1 << 1$\r
$计算 1 左移 1$\r
$计算 1 >> 1$\r
$计算 1 右移 1$\r
$计算 1 根号 1$// 平方根\r
$计算 1 sqrt 1$\r
$计算 1 四舍五入 1$\r
\`\`\`\r
\r
### 判断 🔍\r
可以用英语缩写  \r
如果尾是不会终止往下执行的\r
\r
| 中文 | 英文 |\r
| ---- | ---- |\r
| 如果 | if |\r
| 如果尾 | end |\r
| 返回如果尾 | else |\r
\r
#### 返回如果\r
支持两个方法\r
\`\`\`\r
a:2\r
如果:a==0\r
yes\r
否则如果:a==1\r
no\r
elif:a==2\r
Good\r
否则\r
error\r
\`\`\`\r
\r
#### 支持逻辑\r
\`\`\`\r
和 &\r
或 |\r
\`\`\`\r
\r
#### 支持判断\r
\`\`\`\r
大于等于 >=\r
大于 >\r
小于等于 <=\r
小于 <\r
等于 ==\r
不等于 !=\r
混合判断 ()\r
长度判断 !\r
数组是否存在字符 in\r
不等于正则 ~\r
正则 ~=\r
\`\`\`\r
\r
\`\`\`\r
如果:\\d+~=123\r
成功\r
否则\r
失败\r
\`\`\`\r
\r
**返回：成功**\r
\r
### 判断框 📦\r
\`\`\`\r
如果>a==a\r
ok\r
>否则\r
no\r
<如果\r
\`\`\`\r
\r
**支持套娃判断**\r
\`\`\`\r
如果>a==b\r
    ok\r
>否则如果:a==a\r
    如果>a==a\r
        ok\r
    >否则\r
        no\r
    <如果\r
<如果\r
\`\`\`\r
\r
支持两种判断内方法\r
\`\`\`\r
>跳过\r
>终止\r
\`\`\`\r
\r
### 判断值和空值 ❓\r
| 判断 |\r
| ---- |\r
| null |\r
| nil |\r
| {} |\r
| [] |\r
| false |\r
| 空 |\r
| NaN |\r
| undefined |\r
| 留空 |\r
\r
\r
判断到空返回true\r
\`\`\`\r
// 返回bool类型数据\r
$判断空值 null$\r
\`\`\`\r
\r
没判断到空返回true\r
\`\`\`\r
$判断值 null$\r
\`\`\`\r
\r
## 🌐 网络操作\r
\r
#### 终止服务器 🛑\r
// 直接终止服务器，不会关闭主程序，可以做一些应急措施后查看程序日志\r
\`\`\`\r
$终止服务器$\r
\`\`\`\r
\r
#### 启动后数据 📊\r
\`\`\`\r
$全局变量 访问数据$\r
\`\`\`\r
\r
GET返回示例\r
\`\`\`json\r
{\r
    "路径":"/api.n",\r
    "来源":"GET",\r
    "请求头":{"Accept-Encoding":["gzip"],"User-Agent":["Nebula-Client/1.0"]},\r
    "IP":"127.0.0.1",\r
    "Host":"127.0.0.1:8080"\r
}\r
\`\`\`\r
\r
获取GET参数\r
\`\`\`\r
$G key 默认值$\r
\`\`\`\r
\r
POST返回示例\r
\`\`\`json\r
{\r
    "路径":"/api.n",\r
    "来源":"POST",\r
    "请求头":{"Accept-Encoding":["gzip"],"User-Agent":["Nebula-Client/1.0"]},\r
    "IP":"127.0.0.1",\r
    "Host":"127.0.0.1:8080"\r
}\r
\`\`\`\r
\r
#### 输出类型 📤\r
在启动服务器后被访问的词库提供输出类型的方法\r
\`\`\`\r
$全局变量 输出类型 text$\r
\`\`\`\r
\r
#### 输出头部 📋\r
设置后会在输出时候进行\r
\`\`\`\r
$全局变量 输出头部 {"Location":"https://cjxpj.com"}$\r
$设置头部 beer good$\r
\`\`\`\r
\r
#### COOKIE 🍪\r
设置后会在输出时候进行  \r
《**禁用JS**》默认false，禁用后无法让JavaScript读取，仅限在域名访问中传输。  \r
《**存活**》默认0，秒为单位。\r
\r
\`\`\`\r
a:"""\r
[\r
    {\r
        "命名": "id",\r
        "数据": "123456",\r
        "路径": "/",\r
        "禁止JS": false,\r
        "存活": 3600,\r
    }\r
]\r
"""\r
$全局变量 COOKIE %a%$\r
\`\`\`\r
\r
**目录结构**\r
\r
服务器WS词库\r
> private/websocket/server.n\r
\r
客户端WS词库-支持自义定\r
> private/websocket/app.n\r
\r
### WS 🔗\r
WS连接配合异步使用\r
\`\`\`\r
// 词库路径留空默认 private/websocket/app.n\r
ws连接数据:$WS连接 [URL] [词库路径]$\r
// 放在线程变量中储存\r
$线程变量 WS %ws连接数据%$\r
\`\`\`\r
\r
回复WS消息可用\r
\`\`\`\r
$WS断开连接$\r
\`\`\`\r
\r
\`\`\`\r
$WS发送 [WS数据] 文本$\r
$WS断开 [WS数据]$\r
\`\`\`\r
\r
类型变量\r
\`\`\`\r
文本消息\r
二进制消息\r
未知消息\r
\`\`\`\r
\r
### 访问 🌐\r
header可以留空\r
\`\`\`\r
$访问 url header$\r
$访问POST url data header$\r
\`\`\`\r
\r
### 通信 📡\r
先记录后操作\r
\`\`\`\r
$通信记录 URL$\r
// 秒为单位，0为不限制\r
$通信超时 1$\r
$通信GET$\r
$通信POST data$\r
$通信POST文件 form name data$\r
$通信POST文件 name data$\r
$通信头部 json/string$\r
$通信发包$\r
// 这是获取全部信息，包括准备发送的数据都在内。\r
$通信取出$\r
// 这是只获取结果\r
$通信取出结果$\r
\`\`\`\r
\r
上传文件  \r
form是表单name文件名字data是数据\r
\`\`\`\r
$通信POST文件 form name data$\r
\`\`\`\r
\r
直接填名字默认表单跟文件都为同一个名字\r
\`\`\`\r
$通信POST文件 name data$\r
\`\`\`\r
\r
## 🕒 时间操作\r
\r
### 时间变量 ⏰\r
\`\`\`\r
%时间戳%\r
%毫秒时间戳%\r
%纳秒时间戳%\r
%时间yyyy%\r
\`\`\`\r
\r
### 时间戳格式化时间 📅\r
\`\`\`\r
$时间戳格式化时间 %时间戳% s秒$\r
\`\`\`\r
\r
### 延迟 ⏳\r
> 毫秒单位\r
\`\`\`\r
// 一秒延迟示例\r
$延迟 [1000*1]$\r
\`\`\`\r
\r
## 🎨 绘图与图片处理\r
\r
### 绘图 🎨\r
字体在内部文件夹的字体文件夹内  \r
一个绘图函数中仅支持一个创建\r
\r
| 需求 | 参数 | 所需 |\r
| ---- | ---- | ---- |\r
| 创建 | 1/2 | img:Base64\\|x/y |\r
| 二维码 | 1 | string |\r
| 颜色 | 3/4 | R/G/B/A |\r
| 画字 | 1/3 | string/x/y |\r
| 字体 | 1 | file |\r
| 大小 | 1 | string:int |\r
| 伽马值 | 1 | string:int |\r
| 模糊 | 1 | string:int |\r
| 锐化 | 1 | string:int |\r
| 对比度 | 1 | string:int |\r
| 亮度 | 1 | string:int |\r
| 饱和度 | 1 | string:int |\r
| 画圆 | 2 | x/y |\r
| 画方 | 4 | x始/y始/x终/y终 |\r
| 画线 | 4 | x始/y始/x终/y终 |\r
| 画虚线 | 6 | x始/y始/x终/y终/l长/s间隔 |\r
| 贴图 | 3/5/6 | img:Base64/x/y/w宽/h高/0.1~1透明度 |\r
| 插图 | 1/2 | times/img:Base64 |\r
| 输出 | 1 | gif/png/jpg/jpeg/信息 |\r
\r
| 重构需求 | 参数 | 所需 |\r
| ---- | ---- | ---- |\r
| 圆形 | 0/1 | size |\r
| 圆角矩形 | 2/4 | x/y/dx/dy |\r
| 旋转 | 0/1 | rotate0~360 |\r
\r
#### 示例仅供参考\r
\`\`\`json\r
$全局变量 输出类型 image/png$\r
文本>画=\r
[\r
    {\r
        "需求": "颜色",\r
        "参数": ["255","255","255","255"]\r
    },\r
    {\r
        "需求": "创建",\r
        "参数": ["380","520"]\r
    },\r
    {\r
        "需求": "颜色",\r
        "参数": ["0","0","0","255"]\r
    },\r
    {\r
        "需求": "大小",\r
        "参数": ["25"]\r
    },\r
    {\r
        "需求": "画字",\r
        "参数": ["酒乐文游","135","80"]\r
    },\r
    {\r
        "需求": "颜色",\r
        "参数": ["255","0","0","128"]\r
    },\r
    {\r
        "需求": "画方",\r
        "参数": ["200","200","250","250"]\r
    },\r
    {\r
        "需求": "输出",\r
        "参数": ["png"]\r
    }\r
]\r
<文本\r
$绘图 %画%$\r
\`\`\`\r
\r
### GIF拆帧 🎞️\r
\`\`\`\r
a:$读文件 database/test.gif$\r
$GIF拆帧 %a%$\r
\`\`\`\r
\r
数据Base64编码了\r
\`\`\`json\r
[\r
    "xxx",\r
    "xxx"\r
]\r
\`\`\`\r
\r
### 画布 🎨\r
创建画布需要赋予值\r
\`\`\`\r
$画布.创建 [高] [宽]$\r
$画布.创建 [高] [宽] [#十六进制|颜色地址]$\r
$画布.创建 [URL] [高] [宽]$\r
$画布.创建 [文件路径] [高] [宽]$\r
$画布.创建 [图片字符串数据] [高] [宽]$\r
\`\`\`\r
\r
绘制\r
\`\`\`\r
$绘制.图片 [画布] [图片] [高] [宽] [旋转] [x] [y] [透明度] [半径]$\r
$绘制.方形描边 [画布] [X] [Y] [宽] [高] [圆润] [颜色]$\r
$绘制.方形 [画布] [X] [Y] [宽] [高] [圆润] [颜色]$\r
$绘制.椭圆描边 [画布] [X1] [Y1] [X2] [Y2]$\r
$绘制.椭圆 [画布] [X1] [Y1] [X2] [Y2]$\r
$绘制.圆形描边 [画布] [X] [Y] [半径] [起始] [结束] [颜色]$\r
$绘制.圆形 [画布] [X] [Y] [半径] [起始] [结束] [颜色]$\r
$绘制.多边形 [画布] [X1],[Y1] [X2],[Y2] [X3],[Y3]...$\r
$绘制.多边形描边 [画布] [X1],[Y1] [X2],[Y2]...$\r
$绘制.随机线条 [画布] [数量]$\r
$绘制.随机点 [画布] [数量]$\r
$绘制.波浪 [画布] [X1] [Y1] [X2] [Y2] [波浪高度] [波长] [步长]$\r
// 打码像素块通过画笔大小调整，用法跟方形一样，可以先用方形定位后在用马赛克\r
$绘制.马赛克 [画布] [X1] [Y1] [X2] [Y2]$\r
$绘制.圆弧 [画布] [X] [Y] [半径] [起始] [结束] [颜色]$\r
$绘制.线 [画布] [X1] [Y1] [X2] [Y2] [颜色]$\r
$绘制.喷漆 [画布] [X1] [Y1] [X2] [Y2] [半径] [密度1~100] [颜色]$\r
\`\`\`\r
\r
画笔\r
\`\`\`\r
// 只读取[私有]目录下，字体文件夹中字体文件\r
$画笔.字体 [画布] [文件路径|font.ttf]$\r
$画笔.大小 [画布] [大小]$\r
$画笔.设置颜色 %a% [随机|#十六进制|颜色地址|R G B A]$\r
// 需要赋予值获取颜色数据\r
颜色:$画笔.获取颜色 %a% [#十六进制|R G B A]$\r
\`\`\`\r
\r
画布重构，会绘制画布整体构造\r
\`\`\`\r
// 会旋转整个画布，背景会通过画笔颜色绘制\r
$画布.旋转 [画布] [旋转]$\r
// 剪切画布，会绘制画布整体构造，边缘会根据画笔颜色绘制\r
$画布.圆形 [画布] [半径]$\r
// 给整个画布打码\r
$画布.马赛克 [画布] [半径]$\r
\`\`\`\r
\r
### 图片相似度 🔍🖼️\r
\`\`\`\r
图1:$读文件 database/1.png$\r
图2:$读文件 database/2.png$\r
$图片相似度 %图1% %图2%$\r
\`\`\`\r
\r
## 📊 数据处理\r
\r
### JSON 操作 📦\r
\`\`\`\r
$JSON解析 [json] [键]$\r
// 存可以改成存字只存文本数据\r
// 可以直接通过多层键设置值\r
$JSON存 [json] [值] [键]...$\r
// $JSON存 {} 内容 a b$ 返回 {"a"{"b":"内容"}}\r
$JSON存字 [json] [值] [键]...$\r
// 这是给元素追加用的\r
$JSON追加 [json] [值]$\r
$JSON追加字 [json] [值]$\r
$JSON存在 [json] [键]$\r
$JSON删 [json] [键]$\r
\`\`\`\r
\r
\r
#### 有数据数据函数\r
| 需求 | 返回 |\r
| ---- | ---- |\r
| 解析 | string |\r
| 判断 | true/false |\r
| 长度 | int |\r
| 取出 | json/[]json/string |\r
\r
\`\`\`\r
// 快捷解析支持->批量解析\r
$JSON解析 [json] 键->键$\r
$JSON判断 [json]$\r
$JSON长度 [json]$\r
\`\`\`\r
\r
#### JSON美化 💄\r
1代表缩进空格数量，默认就是1可以留空。\r
\`\`\`\r
$JSON美化 [json] [缩进空格数量]?$\r
\`\`\`\r
\r
#### JSON赋予值 🔧\r
\`\`\`\r
a:123\r
a:{\r
    "a":"a",\r
    "b": "%a",\r
    "c": "s%a"\r
}\r
\`\`\`\r
\r
\`\`\`\r
a:123\r
a:[\r
    "a",\r
    "%a",\r
    "s%a"\r
]\r
\`\`\`\r
\r
### 范围 🔢\r
生成范围内元素\r
\`\`\`\r
$范围 5 10$\r
\`\`\`\r
\r
返回结果\r
\`\`\`\r
[5,6,7,8,9,10]\r
\`\`\`\r
\r
### 排序 🔄\r
true/false代表正反排序\r
\`\`\`\r
$排序 键 数据 true/false$\r
\`\`\`\r
\r
使用示例\r
\`\`\`\r
z:[\r
{"data":"100","key":"啤酒"},\r
{"data":"500","key":"兄弟"},\r
{"data":"500","key":"兄弟"},\r
{"data":"50","key":"你好香"}\r
]\r
$排序 data %z% true$\r
\`\`\`\r
\r
### 分割 🔪\r
\`\`\`\r
$分割 , a,b,c$\r
\`\`\`\r
\r
分割范围\r
\`\`\`\r
$分割 , a,b,c 2$\r
\`\`\`\r
\r
## 🔄 流程控制\r
\r
### 回调 🔄\r
内部可以放在触发下  \r
支持缩写[L]\r
\`\`\`\r
$回调 试试$\r
\r
[内部]试试\r
成功\r
\`\`\`\r
\r
### 终止程序 🛑\r
**结束程序并且把准备输出内容打印到日志**\r
\`\`\`\r
$STOP$\r
\`\`\`\r
\r
### 重启程序 🔄\r
\`\`\`\r
$重启$\r
\`\`\`\r
\r
### 终止 🔚\r
> 这里只会输出一个a\r
\`\`\`\r
a\r
>终止\r
a\r
\`\`\`\r
\r
### 跳行 ⏭️\r
是在词条局部内跳行  \r
支持读取变量\r
\`\`\`\r
>跳行+1\r
\`\`\`\r
\r
\`\`\`\r
>跳行-1\r
\`\`\`\r
\r
## 🧩 其他功能\r
\r
### 变量 🔤\r
读取变量\r
\`\`\`\r
a:你好\r
%a%\r
\`\`\`\r
\r
取反变量\r
\`\`\`\r
a:false\r
%!a%\r
\`\`\`\r
\r
快捷获取URL编码数据\r
\`\`\`\r
a:文本\r
%URL_a%\r
\`\`\`\r
\r
快捷B64编码\r
\`\`\`\r
a:文本\r
%URL_a%\r
\`\`\`\r
\r
快捷获取类型\r
\`\`\`\r
a:文本\r
%TYPE_a%\r
\`\`\`\r
\r
### 变量控制 🎛️\r
全局变量就是在回调时候还在的变量  \r
不是全局的在执行完毕后就没了\r
\`\`\`\r
$线程变量 键 值$\r
$全局变量 键 值$\r
$变量 键 值$\r
\`\`\`\r
\r
这个返回a因为键被锁了\r
\`\`\`\r
键:a\r
$锁变量 键$\r
键:b\r
%键%\r
\`\`\`\r
\r
特殊变量功能，在每次读取会生成1开始数值往上的唯一数值，相当于自增。\r
\`\`\`\r
$线程变量 _UID_$\r
$全局变量 _UID_$\r
$变量 _UID_$\r
\`\`\`\r
\r
### 注释 💬\r
\`\`\`\r
// 注释\r
/*\r
多行注释\r
*/\r
\`\`\`\r
\r
注释执行他跟**赋予值**一样  \r
但是他不会产生任何数据\r
\`\`\`\r
#:执行\r
\`\`\`\r
\r
### 主机信息 💻\r
Android无法使用，需要另外方法获取。\r
\`\`\`\r
$主机 CPU$\r
$主机 CPU信息$\r
$主机 内存$\r
$主机 磁盘$\r
$主机 网络$\r
\`\`\`\r
\r
### 数字格式化 🔢\r
默认f可填**b/e/E/f/g/G**\r
\`\`\`\r
$数字格式化 1.1201 2 f$\r
\`\`\`\r
\r
### 赋予值 🔧\r
都支持多字符赋予值文本\r
\`\`\`\r
:$: 执行函数\r
: 支持多字符，特殊功能\r
+: 拼接跟加值\r
-: 减少数值\r
:: 绝对文本\r
:%: 只读取变量\r
\`\`\`\r
\r
#### 特殊功能\r
##### 快捷解析示例\r
\`\`\`\r
a:@{"a":"b"}->a\r
%a%\r
\`\`\`\r
\r
##### 反取示例\r
\`\`\`\r
a:false?:错误\r
%a%\r
\`\`\`\r
\r
\`\`\`\r
a:@{"a":"null"}->a?:没有数据\r
%a%\r
\`\`\`\r
\r
### 框选词库换行的 📦\r
\`\`\`\r
<?n\r
?>\r
\`\`\`\r
\r
### 函数 🔧\r
支持缩写[F]\r
\`\`\`\r
a:b\r
$ok$\r
$z%b%$\r
// 只有这个可以运行\r
$z%a%$\r
\r
\r
[函数]ok\r
b\r
\r
// 可以指定读取变量\r
\r
[函数]z%a%\r
%参数0%\r
\`\`\`\r
\r
变量传出写法\r
\`\`\`\r
Main\r
$测试 ->成功$\r
%a%\r
%b%\r
%c%\r
$函数 动态函数$\r
\r
[F]测试 ->.*->a,b,c,动态函数\r
a:1\r
b:2\r
c:3\r
函数>动态函数\r
4\r
<函数\r
%参数1%\r
！\r
\`\`\`\r
\r
#### 魔术变量 🧙\r
传入后传出\r
\`\`\`\r
Main\r
控制数组:{}\r
_继承_:控制数组\r
$测试$\r
%控制数组%\r
\r
[F]测试->控制数组\r
JSON>控制数组=%控制数组%\r
键=值\r
<JSON\r
\`\`\`\r
\r
### 函数列表 📋\r
\`\`\`\r
$函数列表$\r
\`\`\`\r
\r
### 随机数 🎲\r
\`\`\`\r
%随机数1-100%\r
\`\`\`\r
\r
\`\`\`\r
$随机数 1 100$\r
\`\`\`\r
\r
### 随机文本 🎲📝\r
随机一个字符返回\r
\`\`\`\r
$随机文本 abc$\r
\`\`\`\r
\r
随机一个文本组返回\r
\`\`\`\r
$随机文本 , a,b,c$\r
\`\`\`\r
\r
后面定义数量\r
\`\`\`\r
$随机大小字母 3$\r
$随机小写字母 3$\r
$随机大写字母 3$\r
$随机大小字母数字 3$\r
$随机大写字母数字 3$\r
$随机小写字母数字 3$\r
\`\`\`\r
\r
### 日志 📜\r
\`\`\`\r
// 成功\r
$日志 内容$\r
$日志 内容 成功$\r
// 失败\r
$日志 内容 失败$\r
\`\`\`\r
\r
### 中文转拼音 🇨🇳➡️🇬🇧\r
可以获取多音字，数字代表声调。\r
\`\`\`\r
$中文转拼音 了$\r
\`\`\`\r
\r
返回示例\r
\`\`\`json\r
[["le","lia3o","lia4o"]]\r
\`\`\`\r
\r
### 文件后缀 📄\r
他可以从文件路径中取出最后的文件后缀\r
\`\`\`\r
$文件后缀 a/a.txt$\r
\`\`\`\r
\r
### 捕获 🎣\r
\`\`\`\r
// 获取准备输出的内容\r
$捕获输出$\r
// 清空准备输出的内容并返回\r
$拦截输出$\r
\`\`\`\r
\r
### HTML解析 🌐\r
\`\`\`\r
a:"""\r
<!DOCTYPE html>\r
<html>\r
    <head>\r
        <title>标题</title>\r
    </head>\r
    <body>\r
        <h1>文本</h1>\r
        <p>文本2</p>\r
    </body>\r
</html>\r
"""\r
$HTML解析 %a% html head title$\r
\`\`\`\r
\r
### MD转HTML 📝➡️🌐\r
> 把MD文本转为HTML显示\r
\`\`\`\r
$MD转HTML 内容$\r
\`\`\`\r
\r
### 引入 🔗\r
\r
#### private/dic/a.n\r
\`\`\`\r
[函数]a\r
成功\r
\`\`\`\r
\r
#### 运行的词库\r
\`\`\`\r
#引入=dic/a.n\r
$a$\r
\`\`\`\r
\r
引入文件夹下全部n词库文件\r
\`\`\`\r
#引入=dic/*\r
$a$\r
\`\`\`\r
\r
\r
### 长度 📏\r
**文本长度是单字符算作1单位**\r
\`\`\`\r
$文本长度 内容$\r
$长度 内容$\r
\`\`\`\r
\r
### 正则 🧩\r
正则匹配内容返回json\r
\`\`\`\r
$正则 正则 内容$\r
\`\`\`\r
\r
正则匹配只会返回true/false\r
\`\`\`\r
$正则匹配 正则 内容$\r
\`\`\`\r
\r
### 终端 💻\r
\r
\`\`\`\r
中文：UTF-8、GBK/GB18030、Big5\r
日文：Shift-JIS、EUC-JP、ISO-2022-JP\r
韩文：EUC-KR\r
西欧：ISO-8859-1、Windows-1252\r
\`\`\`\r
\r
\`\`\`\r
cmd:$终端.创建 ./NebulaData/forFmt.exe$\r
// 终端返回乱码定义解码器\r
// $终端.解码器 %cmd% GBK$\r
// 终端临时环境变量\r
// $终端.变量 %cmd% cxk=ok$\r
// $终端.输入 %cmd% 内容$\r
// 最后一个参数用来实时监听，不填就等待执行完毕获取全部输出\r
$终端.执行 %cmd% [private/cmd.n]$\r
// $终端.断开 %cmd%$\r
\`\`\`\r
\r
会卡死线程等待输入后执行\r
\`\`\`\r
$打印 等待输入$\r
a:$终端等待输入$\r
$打印 内容%a%$\r
内容%a%\r
\`\`\`\r
\r
### 复读 🔁\r
\`\`\`\r
$复读 [文本] [次数]$\r
\`\`\`\r
\r
### SMTP邮件 📧\r
\`\`\`\r
$邮件 链接 端口 账号 密码 目标账号 发送头部$\r
\`\`\`\r
\r
发送QQ邮箱样板\r
\`\`\`\r
文本>发送=%val5%\r
Subject:标题\r
From:小啤酒 <2960965389@qq.com>\r
成功\r
<文本\r
$邮件 smtp.qq.com 587 2960965389@qq.com xxxxx 2960965389@qq.com %发送%$\r
\`\`\`\r
\r
### 特殊符号 🔣\r
\r
| 编号 | 符号 |\r
| ---- | ---- |\r
| 0 | $ |\r
| 1 | % |\r
| 2 | : |\r
| 3 | 空格 |\r
| 4 | \\t |\r
| 5 | \\n |\r
| 6 | ; |\r
| 7 | [ |\r
| 8 | ] |\r
| 9 | _ |\r
\r
> 可以让你在函数中，不用写多余赋予值，然后用变量传入。\r
\r
### 回调词库 🔄\r
> 异步词库可以配合延迟做调用\r
\`\`\`\r
$执行词库文件 [文件路径] [触发] [独立/继承/继承函数/互通]$\r
$执行网页词库文件 [文件路径]$\r
\`\`\`\r
\r
### 调用 🔗\r
\r
\`\`\`\r
\r
[内部]test\r
ok\r
\r
Main\r
// 调用输出会打印到终端\r
$调用 [1000/毫秒] test$\r
$回调 test$\r
\r
\`\`\`\r
\r
**独立**\r
默认此方法，可以留空。\r
\`\`\`\r
[指定执行]不会拥有局部[变量]和[函数]\r
\`\`\`\r
\r
**继承**\r
\`\`\`\r
[指定执行]的词库会继承[变量]和[函数]\r
\`\`\`\r
\r
**继承函数**\r
\`\`\`\r
[指定执行]的词库会继承[函数]\r
\`\`\`\r
\r
**互通**\r
\`\`\`\r
会继承[函数]\r
互通[变量]\r
[指定执行]完的词库中变量可以影响到[执行]\r
\`\`\`\r
\r
### Js 🟨\r
**支持库**\r
\`\`\`\r
Buffer\r
setTimeout\r
setInterval\r
console\r
url\r
require\r
\`\`\`\r
\r
,来分割参数\r
从参数0开始\r
a,b,c\r
\r
\`\`\`\r
a:ok\r
code:'''\r
参数0+参数1\r
'''\r
$Js %code% %a%,b$\r
\`\`\`\r
\r
### Lua 🟡\r
,来分割参数\r
a,b,c\r
\r
\`\`\`\r
Main #{\r
\r
code:'''\r
a = "nonon"\r
function main(txt,txt2)\r
print(a)\r
return txt..txt2\r
end\r
'''\r
\r
$Lua %code% a,b$\r
如果>%报错%!=\r
%报错%\r
<如果\r
}#\r
\`\`\`\r
\r
### MYSQL 🐬\r
\`\`\`\r
_MYSQL_账号:root\r
_MYSQL_密码:941331b62d54a7f7\r
_MYSQL_地址:172.20.167.249\r
$mysql sys PING$\r
\`\`\`\r
\r
\`\`\`\r
sql::CREATE DATABASE 数据库名称;\r
$mysql  %sql%$\r
\`\`\`\r
\r
\`\`\`\r
sql::INSERT INTO 表 (name, data) VALUES (?, ?)\r
$mysql 数据库名称 %sql% 绑定内容1 绑定内容2$\r
\`\`\`\r
\r
### SQLITE 📦\r
\`\`\`\r
查询语句\r
c:"""\r
SELECT name, email FROM users\r
"""\r
$sqlite database/文件.db %c%$\r
\r
\r
插入语句\r
b:"""\r
INSERT INTO users (name, email) VALUES (?, ?)\r
"""\r
$sqlite database/文件.db %b% a b$\r
\r
创建表语句\r
a:"""\r
CREATE TABLE IF NOT EXISTS users (\r
	name TEXT NOT NULL,\r
	email TEXT NOT NULL UNIQUE\r
)\r
"""\r
$sqlite database/文件.db %a%$\r
\`\`\`\r
\r
将数据库存放在线程变量_DB_SQLITE，想要直接清空直接在线程变量设置空即可，或者在程序重新启动时候会自动清空。\r
\`\`\`\r
a:"""\r
CREATE TABLE IF NOT EXISTS users (\r
	name TEXT NOT NULL,\r
	email TEXT NOT NULL UNIQUE\r
)\r
"""\r
b:"""\r
INSERT INTO users (name, email) VALUES (?, ?)\r
"""\r
c:"""\r
SELECT name, email FROM users\r
"""\r
// 获取全部表\r
d:PRAGMA table_list\r
$sqlite :内存: %a%$%换行%\r
$sqlite :内存: %b% a b$%换行%\r
$sqlite :内存: %c%$%换行%\r
$sqlite :内存: %d%$\r
\`\`\`\r
\r
### 腾讯接口 🔗\r
\`\`\`\r
接口:$腾讯.接口 [id] [key] [域名] [服务名] [接口名] [版本] [地域|可留空]$\r
$腾讯.调用 %接口% {"json":"数据"}$\r
\`\`\`\r
\r
### 腾讯QQ机器人 🤖\r
\r
调用用法\r
\`\`\`\r
\r
[内部]打招呼\r
我是机器人！\r
\r
你好\r
你好！\r
$调用 500 打招呼$\r
\`\`\`\r
\r
发送图文消息\r
\`\`\`\r
\r
测试\r
文本\r
发送图片:$读文件 database/img.png$\r
\`\`\`\r
\r
群变量\r
\`\`\`\r
%QQ%\r
%群号%\r
%来源%\r
%头像%\r
\`\`\`\r
\r
群函数\r
\`\`\`\r
$发文本 [文本] [图片数据]$\r
$发视频 [视频数据]$\r
$发语音 [语音数据]$\r
\`\`\`\r
\r
频道变量\r
\`\`\`\r
%QQ%\r
%群号%\r
%子群号%\r
%来源%\r
%头像%\r
%昵称%\r
\`\`\`\r
\r
频道函数\r
\`\`\`\r
$发文本 [文本] [图片数据]$\r
\`\`\`\r
`;export{n as default};
